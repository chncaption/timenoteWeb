name: Release

on:
  push:
    tags:
      - 'v*'
    
env:
  COMMIT_ID: "${{ github.sha }}"

jobs:
  build:
    name: Build
    runs-on: ubuntu-18.04
    steps:
      - name: Set up Go 1.18
        uses: actions/setup-go@v2
        with:
          go-version: "1.18"
        id: go

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2
        with:
          clean: false
          submodules: "recursive"
      - run: |
          git fetch --prune --unshallow --tags
          export VERSION=$(git describe --tags)
      
      - name: Get dependencies
        run: |
          sudo apt-get update
          sudo apt-get -y install gcc-mingw-w64-x86-64
          sudo apt-get -y install gcc-arm-linux-gnueabihf libc6-dev-armhf-cross
          sudo apt-get -y install gcc-aarch64-linux-gnu libc6-dev-arm64-cross
      
      - name: Get Go mods
        run: go mod tidy
      
      - name: Build for Windows AMD64
        run: |
          CGO_ENABLED=1 GOOS=windows GOARCH=amd64 CC=x86_64-w64-mingw32-gcc go build -o build/timenoteWeb_${VERSION}_windows_amd64.exe
      - name: Upload Windows AMD64
        uses: actions/upload-artifact@v2
        with:
          name: timenoteWeb_windows_amd64
          path: build/timenoteWeb_*windows_amd64*

      - name: Build for Linux AMD64
        run: |
          CGO_ENABLED=1 GOOS=linux GOARCH=amd64 CC=gcc go build -o build/timenoteWeb_${VERSION}_linux_amd64.exe
      - name: Upload Linux AMD64
        uses: actions/upload-artifact@v2
        with:
          name: timenoteWeb_linux_amd64
          path: build/timenoteWeb_*linux_amd64*


      - name: Build for Linux Arm64
        run: |
          CGO_ENABLED=1 GOOS=linux GOARCH=arm64 CC=aarch64-linux-gnu-gcc go build -o build/timenoteWeb_${VERSION}_linux_arm64.exe
      - name: Upload Linux Arm64
        uses: actions/upload-artifact@v2
        with:
          name: timenoteWeb_linux_arm64
          path: build/timenoteWeb_*linux_arm64*

      - run: go get -u github.com/tcnksm/ghr
      
      - name: Release
        run: |
          ghr -t ${{ github.token }} \
              -u gggxbbb \
              -r timenoteWeb \
              -c ${{ github.sha }} \
              -n ${VERSION} \
              -draft \
              ${VERSION} build/
      
      
      
      
